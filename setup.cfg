[metadata]
name = corazon
description = Pipeline to run exovetter
long_description = file: README.rst
long_description_content_type = text/x-rst
keywords = astronomy, astrophysics
author = Susan Mullally et al.
author_email = smullally@stsci.edu
license = BSD
license_file = LICENSE.rst
url = https://github.com/spacetelescope/corazon
edit_on_github = False
github_project = spacetelescope/corazon
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
zip_safe = False
setup_requires =
    setuptools_scm
install_requires =
    numpy>=1.17
    astropy>=4
python_requires = >=3.7

[options.extras_require]
all =
    matplotlib
    lightkurve
test =
    pytest-astropy-header
    pytest-doctestplus
docs =
    sphinx-automodapi
    sphinx_rtd_theme

[tool:pytest]
minversion = 5.0
testpaths = "tests" "docs" "corazon"
norecursedirs = build docs/_build
astropy_header = True
doctest_plus = enabled
filterwarnings =
    error
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:Using or importing the ABCs:DeprecationWarning
    ignore:the imp module is deprecated:DeprecationWarning
    ignore:`LightCurveFile.header` is deprecated
    ignore:unclosed file:ResourceWarning

[flake8]
exclude = .git,__pycache__,build,dist
max-line-length = 125

[coverage:run]
source = corazon
omit =
    corazon/version*
    */corazon/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
